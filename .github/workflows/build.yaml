on:
  push:
    branches:
      - main
      - develop

jobs:
  setup-argocd:
    runs-on: self-hosted
    env:
      ARGOCD_IP: ${{ secrets.ARGOCD_IP }} 
      ARGOCD_ID: ${{ secrets.ARGOCD_ID }}
      ARGOCD_PW: ${{ secrets.ARGOCD_PW }}
      USER_PW: ${{ secrets.USER_PW }}
    steps:
      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          echo $USER_PW | sudo -S install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
          rm argocd-linux-amd64
      - name: Login to ArgoCD server
        run: >
          argocd login $ARGOCD_IP 
          --username $ARGOCD_ID
          --password $ARGOCD_PW
          --insecure
  
  push-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: asia-northeast3-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Build and push
        uses: docker/build-push-action@v3.0.0
        with:
          context: .
          push: true
          tags: asia-northeast3-docker.pkg.dev/e2eml-jiho/setiment-analysis/sentiment-app
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-app:
    needs: [push-docker-image, setup-argocd]
    runs-on: self-hosted
    steps:
      - name: Create Kubernetes application into ArgoCD
        run: >
          argocd app create ${{ github.event.repository.name }}
          --repo asia-northeast3-docker.pkg.dev
          --helm-chart e2eml-jiho/sentiment-helm/sentiment-helm
          --helm-set image.name=asia-northeast3-docker.pkg.dev/e2eml-jiho/setiment-analysis/sentiment-app
          --revision 0.0.1
          --dest-server https://kubernetes.default.svc
          --dest-namespace sentiment-api
          --upsert
      - name: Synchronize application
        run: |
          argocd app get ${{ github.event.repository.name }} --hard-refresh
          argocd app sync ${{ github.event.repository.name }}
          argocd app actions run ${{ github.event.repository.name }} restart --kind Deployment


  

  
  